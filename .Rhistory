y_lab <- "Equivalente Esférico"
ggplot(data, aes(x = reorder(pos, equivesfpostq), y=equivesfpostq, fill=formula)) +
geom_bar(stat="identity", position="identity") +
geom_line() +
geom_hline(yintercept=0) +
scale_x_discrete(breaks=NULL) +
labs(title = title, x = x_lab, y = y_lab) +
theme(legend.position="none")
data <- arrange(data, equivesfpostq)
ggplot(data, aes(x = pos, y=equivesfpostq, fill=formula)) +
geom_bar(stat="identity", position="identity") +
geom_line() +
geom_hline(yintercept=0) +
scale_x_discrete(breaks=NULL) +
labs(title = title, x = x_lab, y = y_lab) +
theme(legend.position="none")
data$pos <- which(data$equivesfpostq >= 0 | data$equivesfpostq < 0)
ggplot(data, aes(x = pos, y=equivesfpostq, fill=formula)) +
geom_bar(stat="identity", position="identity") +
geom_line() +
geom_hline(yintercept=0) +
scale_x_discrete(breaks=NULL) +
labs(title = title, x = x_lab, y = y_lab) +
theme(legend.position="none")
title <- "Defecto Refactivo Posquirúrgico"
x_lab <- "Pacientes"
y_lab <- "Equivalente Esférico"
data <- arrange(data, equivesfpostq)
data$pos <- which(data$equivesfpostq >= 0 | data$equivesfpostq < 0)
ggplot(data, aes(x = pos, y=equivesfpostq, fill=formula)) +
geom_bar(stat="identity", position="identity") +
geom_line() +
geom_hline(yintercept=0) +
scale_x_discrete(breaks=NULL) +
labs(title = title, x = x_lab, y = y_lab) +
theme(legend.position="none")
ggplot(data2, aes(x=pos, y=equivesfpostq)) +
geom_area(aes(fill=formula)) +
geom_line() +
geom_hline(yintercept=0)
ggplot(data2, aes(x=pos, y=equivesfpostq)) +
geom_area(aes(fill=formula)) +
geom_line() +
geom_hline(yintercept=0) +
scale_x_discrete(breaks=NULL) +
labs(title = title, x = x_lab, y = y_lab) +
theme(legend.position="none")
ggplot(data, aes(x = pos, y=equivesfpostq, fill=formula)) +
geom_bar(stat="identity", position="identity") +
geom_line() +
geom_hline(yintercept=0) +
scale_x_discrete(breaks=NULL) +
labs(title = title, x = x_lab, y = y_lab) +
theme(legend.position="none")
ggplot(data, aes(x = pos, y=equivesfpostq, fill=formula)) +
geom_bar(stat="identity", position="identity") +
geom_line() +
geom_hline(yintercept=0) +
labs(title = title, x = x_lab, y = y_lab) +
theme(legend.position="none")
ggplot(data, aes(x = pos, y=equivesfpostq, fill=formula)) +
geom_bar(stat="identity", position="identity") +
geom_line() +
geom_hline(yintercept=0) +
labs(title = title, x = x_lab, y = y_lab) +
theme(legend.position="none")
ggplot(data2, aes(x=pos, y=equivesfpostq)) +
geom_area(aes(fill=formula)) +
geom_line() +
geom_hline(yintercept=0) +
labs(title = title, x = x_lab, y = y_lab) +
theme(legend.position="none")
ggplot(data, aes(x = pos, y=equivesfpostq, fill=formula)) +
geom_bar(stat="identity", position="identity") +
geom_line() +
geom_hline(yintercept=0) +
labs(title = title, x = x_lab, y = y_lab) +
theme(legend.position="none")
ggplot(data, aes(x = pos, y=equivesfpostq, fill=formula)) +
geom_bar(stat="identity", position="identity") +
geom_hline(yintercept=0) +
labs(title = title, x = x_lab, y = y_lab) +
theme(legend.position="none")
data <- arrange(data, equivesfpostq)
data$pos <- which(data$equivesfpostq >= 0 | data$equivesfpostq < 0)
setwd("C:/Users/jasam/Google Drive/Laboratorios/Datascience/nena")
setwd("C:/Users/jasam/Google Drive/Laboratorios/Datascience/nena")
data <- read.table("BASE DE DATOS 26 julio 2015.csv", sep = ";", header = TRUE)
dim(data)
data <- arrange(data, equivesfpostq)
suppressWarnings(suppressMessages(library(dplyr)))
suppressWarnings(suppressMessages(library(ggplot2)))
data <- arrange(data, equivesfpostq)
data <- arrange(data, equivesfpostq)
View(data)
View(data)
data$pos <- which(data$equivesfpostq >= 0 | data$equivesfpostq < 0)
data$equivesfpostq <- as.numeric(sub(",", ".", data$equivesfpostq, fixed = TRUE))
data <- arrange(data, equivesfpostq)
data$pos <- which(data$equivesfpostq >= 0 | data$equivesfpostq < 0)
title <- "Defecto Refactivo Posquirúrgico"
x_lab <- "Pacientes"
y_lab <- "Equivalente Esférico"
g <- ggplot(data, aes(x = pos, y=equivesfpostq, fill=formula))
g <- g + geom_bar(stat="identity", position="identity")
g <- g + geom_hline(yintercept=0)
g <- g + labs(title = title, x = x_lab, y = y_lab)
g <- g + theme(legend.position="none")
g
title <- "Defecto Refactivo Posquirúrgico"
x_lab <- "Pacientes"
y_lab <- "Equivalente Esférico"
data <- arrange(data, equivesfpostq)
data$pos <- which(data$equivesfpostq >= 0 | data$equivesfpostq < 0)
ggplot(data, aes(x = pos, y=equivesfpostq, fill=formula)) +
geom_bar(stat="identity", position="identity") +
geom_hline(yintercept=0) +
labs(title = title, x = x_lab, y = y_lab) +
theme(legend.position="none")
data
data <- arrange(data, equivesfpostq)
data$pos <- which(data$equivesfpostq >= 0 | data$equivesfpostq < 0)
ggplot(data, aes(x = pos, y=equivesfpostq, fill=formula)) +
geom_bar(stat="identity", position="identity") +
geom_hline(yintercept=0) +
labs(title = title, x = x_lab, y = y_lab) +
theme(legend.position="none")
data$formula <- as.numeric(data$equivesfpostq) > 0
ggplot(data, aes(x = pos, y=equivesfpostq, fill=formula)) +
geom_bar(stat="identity", position="identity") +
geom_hline(yintercept=0) +
labs(title = title, x = x_lab, y = y_lab) +
theme(legend.position="none")
data$sexo <- as.character(data$sexo)
data$sexo
data[data$sexo == 0,c("sexo", "casocont")]
new_data <- data[,c("sexo", "casocont")]
new_data$sexo[new_data$sexo == "0"] <- "Masculino"
new_data$sexo[new_data$sexo == "1"] <- "Femenino"
new_data$casocont[new_data$casocont == "0"] <- "Control"
new_data$casocont[new_data$casocont == "1"] <- "Casos"
people <- table(new_data$sexo, new_data$casocont)
df <- data.frame(people)
names(df) <- c("Sexo","Caso_control","Frequencia")
ggplot(data=df, aes(x=Sexo, y=Frequencia, fill=Caso_control)) + geom_bar(stat="identity")
ggplot(data=df, aes(x=Caso_control, y=Frequencia, fill=Sexo)) + geom_bar(stat="identity") + labs(title = "Distribución por sexo", x = "Agudeza Visual", y = "Frecuencia")
data_box <- data[,c("equivesf", "equivesfpostq", "casocont")]
data_box$casocont[data_box$casocont == "0"] <- "Controles"
data_box$casocont[data_box$casocont == "1"] <- "Casos"
data_box$equivesf <- as.numeric(sub(",", ".", data_box$equivesf, fixed = TRUE))
#cleanning data
dataf1 <- data_box[,c("equivesf", "casocont")]
dataf1$qx <- "PREQUIRURGICO"
names(dataf1) <- c("equivesf", "caso", "qx")
dataf2 <- data_box[,c("equivesfpostq", "casocont")]
dataf2$qx <- "POSQUIRURGICO"
names(dataf2) <- c("equivesf", "caso", "qx")
new_data <- rbind(dataf1, dataf2)
new_data$equivesf <- as.numeric(sub(",", ".", new_data$equivesf, fixed = TRUE))
new_data$qx <- factor(new_data$qx, levels = c("PREQUIRURGICO", "POSQUIRURGICO"))
ggplot(new_data, aes(x = factor(caso), y = equivesf)) + geom_boxplot(fill = "#F8766D", colour = "#000000") + facet_wrap(~ qx) + labs(title = "Distribución del Defecto Refractivo", x = "Agudeza Visual", y = "Equivalente Esférico")
corrplot(mcor, method="shade", shade.col=NA, tl.col="black", tl.srt=45)
corrplot(mcor, method="shade", shade.col=NA, tl.col="black", tl.srt=45)
library(ggplot2)
corrplot(mcor, method="shade", shade.col=NA, tl.col="black", tl.srt=45)
install.packages("corrplot")
library(corrplot)
corrplot(mcor, method="shade", shade.col=NA, tl.col="black", tl.srt=45)
M <- cor(mtcars)
corrplot(M, method = "circle")
N <- cor(data)
View(data)
names(data)
data[,c("cilindro", "esfera")]
matrix_data <- data[,c("cilindro", "esfera")]
matrix_cor<- cor(matrix_data)
matrix_cor
matrix_data
matrix_data
matrix_data$cilindro
matrix_data$cilindro <- as.numeric(sub(",", ".", matrix_data$cilindro, fixed = TRUE))
matrix_data$esfera <- as.numeric(sub(",", ".", matrix_data$esfera, fixed = TRUE))
matrix_cor <- cor(matrix_data)
corrplot(matrix_cor, method = "circle")
?corrplot
corrplot(matrix_cor, method = "shade")
names(data)
data$edad
matrix_data <- data[,c("cilindro", "esfera", "edad")]
matrix_data$edad <- as.numeric(sub(",", ".", matrix_data$edad, fixed = TRUE))
matrix_cor <- cor(matrix_data)
matrix_data$cilindro <- as.numeric(sub(",", ".", matrix_data$cilindro, fixed = TRUE))
matrix_data$esfera <- as.numeric(sub(",", ".", matrix_data$esfera, fixed = TRUE))
matrix_data$edad <- as.numeric(sub(",", ".", matrix_data$edad, fixed = TRUE))
matrix_cor <- cor(matrix_data)
corrplot(matrix_cor, method = "shade")
names(data)
matrix_data <- data[,c("cilindro", "esfera", "edad", "equivesfpostq")]
matrix_data <- data[,c("cilindro", "esfera", "edad", "equivesfpostq")]
matrix_data$cilindro <- as.numeric(sub(",", ".", matrix_data$cilindro, fixed = TRUE))
matrix_data$esfera <- as.numeric(sub(",", ".", matrix_data$esfera, fixed = TRUE))
matrix_data$edad <- as.numeric(sub(",", ".", matrix_data$edad, fixed = TRUE))
matrix_data$equivesfpostq <- as.numeric(sub(",", ".", matrix_data$equivesfpostq, fixed = TRUE))
matrix_cor <- cor(matrix_data)
corrplot(matrix_cor, method = "shade")
corrplot(matrix_cor, method = "shade",shade.col=NA, tl.col="black", tl.srt=45)
names(data)
matrix_data <- data[,c("cilindro", "esfera", "edad", "equivesfpostq")]
matrix_data <- data[,c("cilindro", "esfera", "edad", "equivesfpostq", "qanterior")]
matrix_data$qanterior <- as.numeric(sub(",", ".", matrix_data$qanterior, fixed = TRUE))
matrix_data <- data[,c("cilindro", "esfera", "edad", "equivesfpostq", "qanterior")]
matrix_data$cilindro <- as.numeric(sub(",", ".", matrix_data$cilindro, fixed = TRUE))
matrix_data$esfera <- as.numeric(sub(",", ".", matrix_data$esfera, fixed = TRUE))
matrix_data$edad <- as.numeric(sub(",", ".", matrix_data$edad, fixed = TRUE))
matrix_data$equivesfpostq <- as.numeric(sub(",", ".", matrix_data$equivesfpostq, fixed = TRUE))
matrix_data$qanterior <- as.numeric(sub(",", ".", matrix_data$qanterior, fixed = TRUE))
matrix_cor <- cor(matrix_data)
corrplot(matrix_cor, method = "shade",shade.col=NA, tl.col="black", tl.srt=45)
names(data)
matrix_data <- data[,c("pioccora", "paquimetria", "ablacin", "equivesf", "chora", "kpd")]
matrix_data$pioccora <- as.numeric(sub(",", ".", matrix_data$pioccora, fixed = TRUE))
matrix_data$paquimetria <- as.numeric(sub(",", ".", matrix_data$paquimetria, fixed = TRUE))
matrix_data$ablacin <- as.numeric(sub(",", ".", matrix_data$ablacin, fixed = TRUE))
matrix_data$equivesf <- as.numeric(sub(",", ".", matrix_data$equivesf, fixed = TRUE))
matrix_data$chora <- as.numeric(sub(",", ".", matrix_data$chora, fixed = TRUE))
matrix_data$kpd <- as.numeric(sub(",", ".", matrix_data$kpd, fixed = TRUE))
matrix_cor <- cor(matrix_data)
corrplot(matrix_cor, method = "shade",shade.col=NA, tl.col="black", tl.srt=45)
cor?
?cor
ggplot(cabbage_exp, aes(x=interaction(Date, Cultivar), y=Weight)) +
geom_bar(stat="identity") +
geom_text(aes(label=Weight), vjust=-0.2)
ggplot(cabbage_exp, aes(x=interaction(Date, Cultivar), y=Weight)) +
geom_bar(stat="identity") +
geom_text(aes(label=Weight), vjust=1.5, colour="white")
ggplot(cabbage_exp, aes(x=interaction(Date, Cultivar), y=Weight)) +
geom_bar(stat="identity") +
geom_text(aes(label=Weight), vjust=-0.2)
data$sexo <- as.character(data$sexo)
new_data <- data[,c("sexo", "casocont")]
new_data$sexo[new_data$sexo == "0"] <- "Masculino"
new_data$sexo[new_data$sexo == "1"] <- "Femenino"
new_data$casocont[new_data$casocont == "0"] <- "Control"
new_data$casocont[new_data$casocont == "1"] <- "Casos"
people <- table(new_data$sexo, new_data$casocont)
df <- data.frame(people)
names(df) <- c("Sexo","Caso_control","Frequencia")
#plot
ggplot(data=df, aes(x=Caso_control, y=Frequencia, fill=Sexo)) + geom_bar(stat="identity") + labs(title = "Distribución por sexo", x = "Agudeza Visual", y = "Frecuencia")
library(plyr)
ce <- arrange(cabbage_exp, Date, Cultivar)
ce <- arrange(cabbage_exp, Date, Cultivar)
ce
ce <- ddply(ce, "Date", transform, label_y=cumsum(Weight))
ce
ggplot(ce, aes(x=Date, y=Weight, fill=Cultivar)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y, label=Weight), vjust=1.5, colour="white")
df_arrange <- arrange(cabbage_exp, Date, Cultivar)
ggplot(data=df, aes(x=Caso_control, y=Frequencia, fill=Sexo)) + geom_bar(stat="identity") + labs(title = "Distribución por sexo", x = "Agudeza Visual", y = "Frecuencia")
df_arrange <- arrange(df, Caso_control, Sexo)
df_arrange
df
df_arrange <- ddply(df_arrange, "Caso_control", transform, label_y=cumsum(Frecuencia))
df_arrange <- ddply(df_arrange, "Caso_control", transform, label_y=cumsum(Frequencia))
df_arrange
ggplot(ce, aes(x=Caso_control, y=Frequencia, fill=Sexo)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y, label=Frequencia), vjust=1.5, colour="white")
ggplot(df_arrange, aes(x=Caso_control, y=Frequencia, fill=Sexo)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_y, label=Frequencia), vjust=1.5, colour="white")
df <- arrange(df, Caso_control, Sexo)
df_arrange <- ddply(df_arrange, "Caso_control", transform, label_y=cumsum(Frequencia))
ggplot(data=df, aes(x=Caso_control, y=Frequencia, fill=Sexo)) + geom_bar(stat="identity") + labs(title = "Distribución por sexo", x = "Agudeza Visual", y = "Frecuencia")
ggplot(data=df, aes(x=Caso_control, y=Frequencia, fill=Sexo)) + geom_bar(stat="identity") +
geom_text(aes(y=label_y, label=Frequencia), vjust=1.5, colour="white") +
labs(title = "Distribución por sexo", x = "Agudeza Visual", y = "Frecuencia")
df <- ddply(df_arrange, "Caso_control", transform, label_y=cumsum(Frequencia))
ggplot(data=df, aes(x=Caso_control, y=Frequencia, fill=Sexo)) + geom_bar(stat="identity") +
geom_text(aes(y=label_y, label=Frequencia), vjust=1.5, colour="white") +
labs(title = "Distribución por sexo", x = "Agudeza Visual", y = "Frecuencia")
ggplot(data=df, aes(x=Caso_control, y=Frequencia, fill=Sexo)) + geom_bar(stat="identity") +
geom_text(aes(y=label_y, label=Frequencias), vjust=1.5, colour="white") +
labs(title = "Distribución por sexo", x = "Agudeza Visual", y = "Frecuencia")
ggplot(data=df, aes(x=Caso_control, y=Frequencia, fill=Sexo)) + geom_bar(stat="identity") +
geom_text(aes(y=label_y, label=Frequencia), vjust=1.5, colour="white") +
labs(title = "Distribución por sexo", x = "Agudeza Visual", y = "Frecuencia")
suppressWarnings(suppressMessages(library(plyr)))
tophit[, c("name", "lg", "avg")]
tophit <- tophitters2001[1:25, ] # Take the top 25 from the tophitters data set
ggplot(tophit, aes(x=avg, y=name)) + geom_point()
ggplot(tophit, aes(y=avg, x=name)) + geom_point()
ggplot(tophit, aes(x=avg, y=name)) + geom_point()
?tophitters2001
tophit[, c("name", "lg", "avg")]
tophit[, c("name", "lg", "avg")]
ggplot(tophit, aes(x=avg, y=name)) + geom_point()
ggplot(tophit, aes(x=avg, y=reorder(name, avg))) +
geom_point(size=3) + # Use a larger dot
theme_bw() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(colour="grey60", linetype="dashed"))
ggplot(tophit, aes(x=reorder(name, avg), y=avg)) +
geom_point(size=3) + # Use a larger dot
theme_bw() +
theme(axis.text.x = element_text(angle=60, hjust=1),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_line(colour="grey60", linetype="dashed"))
nameorder <- tophit$name[order(tophit$lg, tophit$avg)]
tophit$name <- factor(tophit$name, levels=nameorder)
tophit$name
ggplot(tophit, aes(x=avg, y=name)) +
geom_segment(aes(yend=name), xend=0, colour="grey50") +
geom_point(size=3, aes(colour=lg)) +
scale_colour_brewer(palette="Set1", limits=c("NL","AL")) +
theme_bw() +
theme(panel.grid.major.y = element_blank(), # No horizontal grid lines
legend.position=c(1, 0.55), # Put legend inside plot area
legend.justification=c(1, 0.5))
ggplot(data=df, aes(x=Caso_control, y=Frequencia)) + geom_point(size=3)
ggplot(data=df, aes(x=Frequencia, y=Caso_control)) + geom_point(size=3)
df
ggplot(BOD, aes(x=Time, y=demand)) + geom_line()
?BOD
ggplot(BOD, aes(x=Time, y=demand)) + geom_line()
BOD1 <- BOD # Make a copy of the data
BOD1$Time <- factor(BOD1$Time)
ggplot(BOD1, aes(x=Time, y=demand, group=1)) + geom_line()
BOD1 <- BOD # Make a copy of the data
BOD1$Time <- factor(BOD1$Time)
ggplot(BOD1, aes(x=Time, y=demand, group=1)) + geom_line()
ggplot(BOD, aes(x=Time, y=demand)) + geom_line()
ggplot(BOD1, aes(x=Time, y=demand, group=1)) + geom_line()
ggplot(BOD, aes(x=Time, y=demand)) + geom_line() + ylim(0, max(BOD$demand))
ggplot(BOD, aes(x=Time, y=demand)) + geom_line() + expand_limits(y=0)
ggplot(BOD, aes(x=Time, y=demand)) + geom_line() + geom_point()
BOD
ggplot(worldpop, aes(x=Year, y=Population)) + geom_line() + geom_point()
ggplot(worldpop, aes(x=Year, y=Population)) + geom_line() + geom_point() +
scale_y_log10()
ggplot(worldpop, aes(x=Year, y=Population)) + geom_line() + geom_point()
ggplot(worldpop, aes(x=Year, y=Population)) + geom_line() + geom_point() +
scale_y_log10()
ToothGrowth
tg <- ddply(ToothGrowth, c("supp", "dose"), summarise, length=mean(len))
tg
ggplot(tg, aes(x=dose, y=length, colour=supp)) + geom_line()
ggplot(tg, aes(x=dose, y=length, linetype=supp)) + geom_line()
ggplot(tg, aes(x=dose, y=length, linetype=supp)) + geom_line()
ggplot(tg, aes(x=factor(dose), y=length, colour=supp, group=supp)) + geom_line()
ggplot(tg, aes(x=dose, y=length, shape=supp)) + geom_line() +
geom_point(size=4)
ggplot(tg, aes(x=dose, y=length, fill=supp)) + geom_line() +
geom_point(size=4, shape=21)
ggplot(BOD, aes(x=Time, y=demand)) +
geom_line(linetype="dashed", size=1, colour="blue")
ggplot(BOD, aes(x=Time, y=demand)) +
geom_line(linetype="dashed", size=1, colour="blue")
tg <- ddply(ToothGrowth, c("supp", "dose"), summarise, length=mean(len))
ggplot(tg, aes(x=dose, y=length, colour=supp)) +
geom_line() +
scale_colour_brewer(palette="Set1")
tg <- ddply(ToothGrowth, c("supp", "dose"), summarise, length=mean(len))
ggplot(tg, aes(x=dose, y=length, colour=supp)) +
geom_line() +
tg <- ddply(ToothGrowth, c("supp", "dose"), summarise, length=mean(len))
ggplot(tg, aes(x=dose, y=length, colour=supp)) +
geom_line() +
tg <- ddply(ToothGrowth, c("supp", "dose"), summarise, length=mean(len))
ggplot(tg, aes(x=dose, y=length, colour=supp)) +
geom_line() +
tg <- ddply(ToothGrowth, c("supp", "dose"), summarise, length=mean(len))
ggplot(tg, aes(x=dose, y=length, colour=supp)) +
geom_line()
tg <- ddply(ToothGrowth, c("supp", "dose"), summarise, length=mean(len))
ggplot(tg, aes(x=dose, y=length, colour=supp)) +
geom_line()
tg <- ddply(ToothGrowth, c("supp", "dose"), summarise, length=mean(len))
ggplot(tg, aes(x=dose, y=length, colour=supp)) +
geom_line()
tg <- ddply(ToothGrowth, c("supp", "dose"), summarise, length=mean(len))
ggplot(tg, aes(x=dose, y=length, colour=supp)) +
geom_line() +
scale_colour_brewer(palette="Set1")
ggplot(tg, aes(x=dose, y=length, group=supp)) +
geom_line(colour="darkgreen", size=1.5)
ggplot(tg, aes(x=dose, y=length, group=supp)) +
geom_line(colour="darkgreen", size=1.5)
ggplot(tg, aes(x=dose, y=length, colour=supp)) +
geom_line(linetype="dashed") +
geom_point(shape=22, size=3, fill="white")
ggplot(tg, aes(x=dose, y=length, colour=supp)) +
geom_line(linetype="dashed") +
geom_point(shape=22, size=3, fill="white")
as.numeric(time(sunspot.year))
as.numeric(time(sunspot.year))
as.numeric(sunspot.year)
sunspot.year
sunspot.year
sunspot.year
sunspot.year
sunspot.year
?sunspot.year
time(sunspot.year)
time(sunspot.year)
sunspot.year
class(sunspot.year)
as.numeric(sunspot.year)
as.numeric(sunspot.year)
sunspotyear <- data.frame(
Year = as.numeric(time(sunspot.year)),
Sunspots = as.numeric(sunspot.year)
)
ggplot(sunspotyear, aes(x=Year, y=Sunspots)) + geom_area()
ggplot(sunspotyear, aes(x=Year, y=Sunspots)) +
geom_area(colour="black", fill="blue", alpha=.2)
?uspopage
ggplot(uspopage, aes(x=Year, y=Thousands, fill=AgeGroup)) + geom_area()
?climate
climate
ggplot(uspopage, aes(x=Year, y=Thousands, fill=AgeGroup)) + geom_area()
clim <- subset(climate, Source == "Berkeley",
select=c("Year", "Anomaly10y", "Unc10y"))
ggplot(clim, aes(x=Year, y=Anomaly10y)) +
geom_ribbon(aes(ymin=Anomaly10y-Unc10y, ymax=Anomaly10y+Unc10y),
alpha=0.2) +
geom_line()
heightweight[, c("ageYear", "heightIn")]
ggplot(heightweight, aes(x=ageYear, y=heightIn)) + geom_point()
ggplot(heightweight, aes(x=ageYear, y=heightIn)) + geom_point(shape=21)
ggplot(heightweight, aes(x=ageYear, y=heightIn)) + geom_point(size=1.5)
ggplot(heightweight, aes(x=ageYear, y=heightIn, colour=sex)) + geom_point()
?install.packages
install.packages("C:\Users\jasam\Downloads\dplyr_0.4.3.zip")
install.packages("C:\\Users\\jasam\\Downloads\\dplyr_0.4.3.zip")
?cut
hw <- heightweight
hw <- heightweight
hw
hw$weightGroup <- cut(hw$weightLb, breaks=c(-Inf, 100, Inf),
labels=c("< 100", ">= 100"))
hw
str(hw)
ggplot(hw, aes(x=ageYear, y=heightIn, shape=sex, fill=weightGroup)) +
geom_point(size=2.5) +
scale_shape_manual(values=c(21, 24)) +
scale_fill_manual(values=c(NA, "black"),
guide=guide_legend(override.aes=list(shape=21)))
ggplot(heightweight, aes(x=weightLb, y=heightIn, fill=ageYear)) +
geom_point(shape=21, size=2.5) +
scale_fill_gradient(low="black", high="white")
names(data)
data$edad
names(data)
ggplot(data, aes(x=edad, y=equivesfpostq)) +
geom_point()
ggplot(data, aes(x=edad, y=equivesfpostq, colour=alergias)) +
geom_point()
ggplot(data, aes(x=edad, y=equivesfpostq, colour=factor(alergias)) +
geom_point()
ggplot(data, aes(x=edad, y=equivesfpostq, colour=factor(alergias))) +
geom_point()
ggplot(data, aes(x=edad, y=equivesfpostq, colour=factor(alergias)) +
geom_point()
ggplot(data, aes(x=edad, y=equivesfpostq, colour=factor(alergias)) + geom_point()
ggplot(data, aes(x=edad, y=equivesfpostq, colour=alergias) + geom_point()
ggplot(data, aes(x=edad, y=equivesfpostq, colour=alergias)) + geom_point()
ggplot(data, aes(x=edad, y=equivesfpostq, colour=alergias)) + geom_point()
ggplot(data, aes(x=edad, y=equivesfpostq, colour=factor(alergias))) + geom_point()
ggplot(data, aes(x=edad, y=equivesfpostq, colour=factor(alergias))) + geom_point(size=1.5)
ggplot(data, aes(x=edad, y=equivesfpostq, colour=factor(alergias))) + geom_point(size=2)
ggplot(data, aes(x=edad, y=equivesfpostq, colour=factor(alergias))) + geom_point(size=3)
ggplot(data, aes(x=edad, y=equivesfpostq, colour=factor(alergias))) + geom_point(size=3) +
labs(colour="Alergias")
title <- "Equivalente Esférico Posquirúrgico vs Edad por Alergia"
x_lab <- "Edad"
y_lab <- "Equivalente Esférico Posquirúrgico"
ggplot(data, aes(x=edad, y=equivesfpostq, colour=factor(alergias))) + geom_point(size=3) +
labs(title = title, x = x_lab, y = y_lab)
labs(colour="Alergias")
title <- "Equivalente Esférico Posquirúrgico vs Edad por Alergia"
x_lab <- "Edad"
y_lab <- "Equivalente Esférico Posquirúrgico"
ggplot(data, aes(x=edad, y=equivesfpostq, colour=factor(alergias))) + geom_point(size=3) +
labs(title = title, x = x_lab, y = y_lab) +
labs(colour="Alergias")
title <- "Equivalente Esférico Posquirúrgico vs Edad por Alergia"
x_lab <- "Edad"
y_lab <- "Equivalente Esférico Posquirúrgico"
ggplot(data, aes(x=edad, y=equivesfpostq, colour=factor(alergias))) + geom_point(size=3) +
labs(title = title, x = x_lab, y = y_lab, colour="Alergias")
title <- "Equivalente Esférico Posquirúrgico vs Edad por Alergia"
x_lab <- "Edad"
y_lab <- "Equivalente Esférico Posquirúrgico"
ggplot(data, aes(x=edad, y=equivesfpostq, colour=factor(alergias))) + geom_point(size=3) +
labs(title = title, x = x_lab, y = y_lab, colour="Alergias") +
stat_smooth(method=lm)
library(MASS) # For the data set
b <- biopsy
b$classn[b$class=="benign"] <- 0
b$classn[b$class=="malignant"] <- 1
?biopsy
biopsy
head(biopsy,10)
ggplot(b, aes(x=V1, y=classn)) +
geom_point(position=position_jitter(width=0.3, height=0.06), alpha=0.4,
shape=21, size=1.5) +
stat_smooth(method=glm, family=binomial)
